
@{
    ViewData["Title"] = "Manage Invites";
    var permissions = (portal.models.RoleAdmin.Permissions)ViewBag.Permissions;

    //var canRoleManagerViewAppInvite = (permissions == null) ? false : (bool)permissions["MD_APPINVITE_VIEW"];
    //var canRoleManagerCreateAppInvite = (permissions == null) ? false : (bool)permissions["MD_APPINVITE_CREATE"];
    //var canRoleManagerEditAppInvite = (permissions == null) ? false : (bool)permissions["MD_APPINVITE_EDIT"];
    //var canRoleManagerDeleteAppInvite = (permissions == null) ? false : (bool)permissions["MD_APPINVITE_DEL"];
    //var canRoleManagerResendAppInvite = (permissions == null) ? false : (bool)permissions["MD_APPINVITE_RESEND"];
}
<div class="kt-form kt-form--fit kt-form--label-right">
    <div class="portlet__foot">
        <div class="form-group">
            <div class="col-lg-12">

                @(Html.Kendo().Grid<ds.portal.applications.invites.Models.AppInvites>()
                    .Name("templateGrid")
                    .Columns(columns =>
                    {
                        columns.Template("<div class='gridactionbuttonscontainer'><a class='kt-font-brand' style='cursor:pointer;' onclick=PerformInviteEdit('#:api_id#') title='Edit'><span style='text-align:center;' class='fa fa-pen'></span></a>" +
                                            "&nbsp;&nbsp;<a class='kt-font-success' style='cursor:pointer;'onclick=PerformInviteView('#:api_id#') title='View'> <span style='text-align:center;' class='fa fa-eye'></span></a>" +
                                            "&nbsp;&nbsp;<a class='kt-font-warning' style='cursor:pointer;'onclick=PerformInviteResend('#:api_id#') title='Resend'> <span style='text-align:center;' class='fa fa-envelope'></span></a>" +
                                            "&nbsp;&nbsp;<a class='kt-font-danger' style='cursor:pointer;'onclick=PerformInviteDelete('#:api_id#') title='Delete'> <span style='text-align:center;' class='fa fa-trash-alt'></span></a>" +
                                            "</div>").Width(110).ClientHeaderTemplate(" ");
                        columns.Bound(p => p.api_id).Title("Id").Width(70);
                        columns.Bound(p => p.api_firstname).Title("First Name");
                        columns.Bound(p => p.api_lastname).Title("Surname");
                        columns.Bound(p => p.api_email).Title("Email");
                        columns.Bound(p => p.api_courseleveltitle).Title("Course Level");
                        columns.Bound(p => p.api_isactivated).ClientTemplate("<input class='k-checkbox-label k-no-text' disabled type='checkbox' #= api_isactivated == 1 ? checked='checked' :'' # />").Title("Logged").HtmlAttributes(new { style = "text-align:center" }).Width(90);
                        columns.Bound(p => p.api_hasapplications).ClientTemplate("<input class='k-checkbox-label k-no-text' disabled type='checkbox' #= api_hasapplications == 1 ? checked='checked' :'' # />").Title("Enroll").HtmlAttributes(new { style = "text-align:center" }).Width(90);
                        columns.Bound(p => p.api_datecreated).Format("{0:dd/MM/yyyy}").Title("Sent").Width(80);
                    })
                    .Resizable(resize => resize.Columns(true))
             .Reorderable(x => x.Columns(true))
             .ColumnMenu(c => c.Columns(true))
                    .Sortable()
                    .Pageable()
                    .Filterable()
                    .NoRecords()
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(5))
                    .DataSource(dataSource =>
                    dataSource
                    .WebApi()
                    .Model(model =>
                    {
                        model.Id(p => p.api_id);
                    })
                    .Events(events => events.Error("error_handler"))
                    .Read(read => read.Action("GetAllApplicationInvites", "ApplicationInviteApi"))
                    .PageSize(20)
                    )
                )

            </div>
            </div>
        </div>
    </div>


                @*<div class="content" id="dv_Manage_AppInvites">





                </div>*@

                @section Scripts{
                    <script src="~/lib/vue/vue.js"></script>
                    <script src="~/lib/vue/vuelidate.min.js"></script>
                    <script src="~/lib/vue/validators.min.js"></script>
                    <script src="~/js/Admin/Companies/ManageInvites.js"></script>

                    <script>
                        $('#editor').summernote({
                            height: 250,                 // set editor height
                            minHeight: null,             // set minimum height of editor
                            maxHeight: null,             // set maximum height of editor
                        });
                    </script>
                    <script>
    var _canRoleManagerViewAppInvite;
    var _canRoleManagerCreateAppInvite;
    var _canRoleManagerEditAppInvite;
    var _canRoleManagerDeleteAppInvite;
    var _canRoleManagerResendAppInvite;

    $(document).ready(function () {
        @*_canRoleManagerViewAppInvite = @canRoleManagerViewAppInvite.ToString().ToLower();
        _canRoleManagerCreateAppInvite = @canRoleManagerCreateAppInvite.ToString().ToLower();
        _canRoleManagerEditAppInvite = @canRoleManagerEditAppInvite.ToString().ToLower();
        _canRoleManagerDeleteAppInvite = @canRoleManagerDeleteAppInvite.ToString().ToLower();
        _canRoleManagerResendAppInvite = @canRoleManagerResendAppInvite.ToString().ToLower();*@

        //if (!_canRoleManagerViewAppInvite) {
        //    window.location.href = '/Error/PermissionDenied';
        //}
        resizeGrid1();
       });
        function resizeGrid1() {
            var contentwrapper = $("#kt_aside").innerHeight();
            var gridElement = $("#templateGrid"),
                newHeight = gridElement.innerHeight(),
                otherElements = gridElement.children().not(".k-grid-content"),
                otherElementsHeight = 0;

            otherElements.each(function () {
                otherElementsHeight += $(this).outerHeight();
            });
                var newHeight = (contentwrapper - otherElementsHeight) - 330;
                if (newHeight < 325) newHeight = 325;
            gridElement.children(".k-grid-content").height(newHeight);
        }

        function exportEmailPDF() {
            var grid = $("#templateGrid").data("kendoGrid");
            grid.hideColumn(0);
            $("#templateGrid").getKendoGrid().saveAsPDF();
            grid.showColumn(0);
        }

        function exportEmailExcel() {
            $("#templateGrid").getKendoGrid().saveAsExcel();
        }
                    </script>
                }

