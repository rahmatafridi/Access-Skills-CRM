@{
    ViewData["Title"] = "Manage Resources";

    Layout = "~/Views/Shared/_Layout.cshtml";

    var role = ViewBag.Role;
    var permissions = (portal.models.RoleAdmin.Permissions)ViewBag.Permissions;

    var canRoleManagerAccessContent = (permissions == null) ? false : (bool)permissions["AC_CCT"];
    var acceptDocumentTypes = ViewBag.acceptDocumentTypes;
    var isMultipleDocumentUpload = ViewBag.isMultipleDocumentUpload;
    var maxDocumentUpload = ViewBag.maxDocumentUpload;
    var maxDocumentFileSize = ViewBag.maxDocumentFileSize;
}

<div class="kt-portlet" id="dv_Resource">
    <div class="kt-portlet__head">
        <div class="form__actions kt-portlet__foot">
            <label style="font-size: large;font-weight:500;margin-left:-10px;margin-top:10px;">Manage Resources</label>
        </div>
        <div class="kt-portlet__head-toolbar">

        </div>
    </div>
    <div class="kt-portlet__body">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab" href="#kt_tabs_1_1" onclick="CategoryGrid">
                    <i class="fa fa-id-card"></i> Category
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#kt_tabs_1_2" onclick="FilesGrid">
                    <i class="fa fa-address-card"></i> Files
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="kt_tabs_1_1" role="tabpanel">
                <div class="row">
                    <div class="col-lg-9">

                    </div>
                    <div class="col-lg-3">
                        <button type="button" style="float:right;margin-bottom:10px;" class="btn btn-sm btn-brand" v-on:click="addnewcat">
                            <i class="la la-plus"></i>
                            <span class="kt-hidden-mobile">Add New</span>
                        </button>

                        @*<button class="btn btn-primary" style="float:right;margin-bottom:10px;" v-on:click="addnewcat">Add New</button>*@
                    </div>
                </div>
                @(Html.Kendo().Grid<crm.portal.CrmModel.PortalDocCategory>()
                            .Name("grid_categroy")
                            .Columns(columns =>
                            {
                                columns.Template("<div class='kt-font-primary'><a class='kt-font-brand' style='cursor:pointer;' onclick=PerformEdit('#:DocCat_Id#') title='Edit'><span style='text-align:center;' class='fa fa-pen''></span></a>" +
                                   "&nbsp;&nbsp;<a class='kt-font-warning' style='cursor:pointer;' onclick=PerformDelete('#:DocCat_Id#') title='Delete'><span style='text-align:center;' class='fa fa-trash'></span></a>" +

                                 "</div>").Width(100).ClientHeaderTemplate(" ");
                                columns.Bound(x => x.DocCat_Id).Hidden();

                                columns.Bound(p => p.DocCat_Title).Title("Name");
                                columns.Bound(p => p.Type).Title("Access Type");



                            })
                            .Resizable(resize => resize.Columns(true))
                            .Reorderable(x => x.Columns(true))
                            .ColumnMenu(c => c.Columns(true))
                            .Sortable()
                            .Pageable()
                            .Filterable()
                            .NoRecords()
                            .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5))
                            .DataSource(dataSource =>
                            dataSource
                            .WebApi()
                            .Model(model =>
                            {
                                model.Id(p => p.DocCat_Id);
                            })
                            .Read(read => read.Action("GetDocCategory", "PortalApi"))
                            .PageSize(20)
                            )
                        )
            </div>
            <div class="tab-pane " id="kt_tabs_1_2" role="tabpanel">
                <div class="row">
                    <div class="col-lg-1" style="margin-top:7px;">
                        <label>Select Category</label>
                    </div>
                    <div class="col-lg-3">
                        <select  class="form-control" v-on:change="LoadOnCate" v-model="cateId">
                            <option v-for="cate in Categories" v-bind:value="cate.DocCat_Id" v-text="cate.DocCat_Title"></option>

                        </select>
                    </div>
                    <div class="col-lg-5">

                    </div>
                    <div class="col-lg-3">

                        <button type="button" style="float:right;margin-bottom:10px;" class="btn btn-sm btn-brand" v-on:click="addnewfile">
                            <i class="la la-plus"></i>
                            <span class="kt-hidden-mobile">Add New</span>
                        </button>
                        @*<button class="btn btn-primary" style="float:right;margin-bottom:10px;" v-on:click="addnewfile">Add New</button>*@
                    </div>
                </div>
                @(Html.Kendo().Grid<crm.portal.CrmModel.PortalDoc>()
                            .Name("grid_docfiles")
                            .Columns(columns =>
                            {
                                columns.Template("<div class='kt-font-primary'><a class='kt-font-brand' style='cursor:pointer;' onclick=PerformEditFile('#:Docs_Id#') title='Edit'><span style='text-align:center;' class='fa fa-pen''></span></a>" +
                                                   "&nbsp;&nbsp;<a class='kt-font-warning' style='cursor:pointer;' onclick=PerformDeleteFile('#:Docs_Id#') title='Delete'><span style='text-align:center;' class='fa fa-trash'></span></a>" +


                                 "</div>").Width(100).ClientHeaderTemplate(" ");
                                columns.Bound(x => x.Docs_Id).Hidden();

                                columns.Bound(p => p.Docs_Title).Title("Name");
                                columns.Bound(p => p.Docs_Version).Title("Version");



                            })
                            .Resizable(resize => resize.Columns(true))
                            .Reorderable(x => x.Columns(true))
                            .ColumnMenu(c => c.Columns(true))
                            .Sortable()
                            .Pageable()
                            .Filterable()
                            .NoRecords()
                            .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5))
                            .DataSource(dataSource =>
                            dataSource
                            .WebApi()
                            .Model(model =>
                            {
                                model.Id(p => p.Docs_Id);
                            })
                            .Read(read => read.Action("GetDocFiles", "PortalApi"))
                            .PageSize(20)
                            )
                        )
            </div>
        </div>
    </div>


    <div class="modal fade" id="kt_modal_view" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="kt-form kt-form--label-right">
                        <div class="row">
                            <div class="col-lg-12">
                                <label>Category Name</label>
                                <input class="form-control" v-model="Cat.DocCat_Title" />
                            </div>
                            <div class="col-lg-12">
                                <label>Access Level</label>
                                <select class="form-control" v-model="Cat.DocCat_Access">
                                    <option value="1">Assessor</option>
                                    <option value="2">Learner</option>
                                    <option value="3">Public</option>

                                </select>
                            </div>
                        </div>



                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" v-on:click="SubmitCat">Submit</button>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="kt_modal_Create" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-md" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Create Resource</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="kt-form kt-form--label-right">

                        <div class="form-group row">
                           
                            <div class="col-sm-12">
                                <label class="col-form-label ">Categroy</label>
                                <select id="ddl_Category" class="form-control" v-model="Files.Docs_Id_DocCategories">
                                    <option v-for="cate in Categories" v-bind:value="cate.DocCat_Id" v-text="cate.DocCat_Title"></option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">

                            <div class="col-sm-6">
                                <label for="recipient-name" class="col-form-label">File Date</label>
                                <input type="date"  class="form-control" v-model="Files.Docs_FileDate">
                            </div>
                            <div class="col-sm-6">
                                <label for="recipient-name" class="col-form-label ">File Version</label>

                                <input type="text" class="form-control" v-model="Files.Docs_Version">
                            </div>
                        </div>
                 
                        <div class="form-group row">
                            <div class="col-sm-12">
                                <label for="recipient-name" class="col-form-label ">Select File</label>

                                <input name="files" class="form-control" id="files" type="file" aria-label="files" />
                                <span id="span_fileUpload"  class="form-text text-muted"></span>
                            </div>


                            <div>
                             

                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" v-on:click="SubmitFile">Submit</button>

                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts{
<script src="~/lib/vue/vue.js"></script>
<script src="~/lib/vue/vuelidate.min.js"></script>
<script src="~/lib/vue/validators.min.js"></script>
<script src="~/js/Portal/ResourceLibrary/Create.js"></script>
}

<script type="text/javascript">
    var _canRoleManagerAccessContent;

    var _acceptDocumentTypes;
    var _allowedExtensions = [];
    var _isMultipleDocumentUpload;
    var _maxDocumentUpload;
    var _maxDocumentFileSize;


    function PerformUserEdit(user_Id) {
        if (!_canRoleManagerAccessUser) {
            toastr.warning('You cannot edit user please contact administrator.', 'Permission denied!');
        }
        else {
            window.location.href = 'Portal/EditUser?id=' + user_Id;
        }
    }

    function PerformViewPermissions(id)
    {

    }

    function PerformDelete(id) {
        //if (!_canRoleManagerDeleteRole) {
        //    toastr.error('You cannot create please contact administrator', 'Permission denied!');
        //    return false;
        //    }
        //    else {
            Swal.fire({
                title: 'Delete?',
                text: "Are you sure you want to delete?",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.dismiss !== "cancel") {
                    $.ajax({
                        url: '/api/PortalResourceLibraryApi/DeleteCate',
                        type: "GET",
                        cache: false,
                        datatype: "JSON",
                        data: { id: id },
                        beforeSend: function () {
                            //displaySpinner();
                        },
                        success: function (result) {
                            if (result) {
                                $('#grid_categroy').data('kendoGrid').dataSource.read();
                                $('#grid_categroy').data('kendoGrid').refresh();

                                toastr.success('Category has been deleted successfully.', 'Deleted!');
                            }
                            else {
                                toastr.error(result.errMsg, 'Error Deleted!');
                            }
                        },
                        error: function (xhr) {
                            toastr.error(xhr.responseText, 'Error Deleted!');
                            return false;
                        },
                        complete: function () {
                            //shideSpinner();
                        },
                    });
                }
            })
           /* }*/
    }

    function PerformDeleteFile(id) {
        //if (!_canRoleManagerDeleteRole) {
        //    toastr.error('You cannot create please contact administrator', 'Permission denied!');
        //    return false;
        //    }
        //    else {
        Swal.fire({
            title: 'Delete?',
            text: "Are you sure you want to delete?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.dismiss !== "cancel") {
                $.ajax({
                    url: '/api/PortalResourceLibraryApi/DeleteCateFile',
                    type: "GET",
                    cache: false,
                    datatype: "JSON",
                    data: { id: id },
                    beforeSend: function () {
                        //displaySpinner();
                    },
                    success: function (result) {
                        if (result) {
                            $('#grid_docfiles').data('kendoGrid').dataSource.read();
                            $('#grid_docfiles').data('kendoGrid').refresh();

                            toastr.success('Files has been deleted successfully.', 'Deleted!');
                        }
                        else {
                            toastr.error(result.errMsg, 'Error Deleted!');
                        }
                    },
                    error: function (xhr) {
                        toastr.error(xhr.responseText, 'Error Deleted!');
                        return false;
                    },
                    complete: function () {
                        //shideSpinner();
                    },
                });
            }
        })
        /* }*/
    }


    var _canRoleManagerViewRoles;
    var _canRoleManagerCreateRole;
    var _canRoleManagerEditRole;
    var _canRoleManagerDeleteRole;
    var _canRoleManagerEditPermissions;
    var _canRoleManagerViewPermissions;

    $(document).ready(function () {
        $('#completeDate').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            todayHighlight: true,

        }).datepicker('setDate', new Date());

        _canRoleManagerAccessContent = @canRoleManagerAccessContent.ToString().ToLower();
         _acceptDocumentTypes = '@acceptDocumentTypes';
        _isMultipleDocumentUpload = false;
        _maxDocumentUpload = @maxDocumentUpload;
        _maxDocumentFileSize = @maxDocumentFileSize;
        //if (!_canRoleManagerAccessContent) {
        //    window.location.href = '/Error/PermissionDenied';
        //}
        if (_acceptDocumentTypes !== null) {
            if (_acceptDocumentTypes.includes(',')) {
                var item = _acceptDocumentTypes.split(',');
                for (var count = 0; count < item.length; count++) {
                    if (item[count] !== "") {
                        _allowedExtensions.push('' + item[count] + '');
                    }
                }
            }
            else {
                _allowedExtensions.push('' + _acceptDocumentTypes + '');
            }
        }

        uploadFile();

        $("#span_fileUpload").text("Max file size is " + _maxDocumentFileSize + " MB and allowed file types: " + _allowedExtensions.toString());

        $(".attachDocuments").attr("style", "display:none")

        $("#chkAttachDocuments").change(function () {
            if ($(this).prop('checked')) {
                $(".attachDocuments").attr("style", "display:inline");
            } else {
                $(".attachDocuments").attr("style", "display:none");
            }
       

    });
    function uploadFile() {
        var _size = (_maxDocumentFileSize * 1048576);

        $("#files").kendoUpload({
            async: {
                chunkSize: 11000,// bytes
                autoUpload: true
            },
            validation: {
                allowedExtensions: _allowedExtensions,
                maxFileSize: _size
            },
            select: onSelect,
            multiple: _isMultipleDocumentUpload
        });


    }

    var _isValidationError = false;
    function onSelect(e) {
        if (e.files.length > _maxDocumentUpload) {
            toastr.error("You can select maximum " + _maxDocumentUpload + " files.", 'Error!');
            e.preventDefault();
        }

        var files = e.files;
        for (var i = 0; i < files.length; i += 1) {
            var file = files[i];
            if (file.validationErrors && file.validationErrors.length > 0) {
                toastr.error('Invaild file format.', 'Error!');
                e.preventDefault();
            }
        }
    }

    });

</script>

<script>
    $(document).ready(function () {
     
    });
    function CategoryGrid() {
        $('#grid_categroy').data('kendoGrid').dataSource.read();
        $('#grid_categroy').data('kendoGrid').refresh();
    }
    function FilesGrid() {
        $('#grid_docfiles').data('kendoGrid').dataSource.read();
        $('#grid_docfiles').data('kendoGrid').refresh();
    }
 


</script>
