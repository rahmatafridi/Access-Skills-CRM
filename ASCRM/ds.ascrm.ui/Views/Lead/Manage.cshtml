
@{ ViewData["Title"] = "Manage Leads";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var permissions = (portal.models.RoleAdmin.Permissions)ViewBag.Permissions;

    var canRoleManagerViewLeads = (permissions == null) ? false : (bool)permissions["MD_LEAD_VIEW"];
    var canRoleManagerEditLead = (permissions == null) ? false : (bool)permissions["MD_LEAD_EDIT"];
    var canRoleManagerDeleteLead = (permissions == null) ? false : (bool)permissions["MD_LEAD_DEL"];
    var hasAdminRole = (permissions == null) ? false : (bool)permissions["MD_LEAD_MSTR"]; }
<style>
    .link-text:hover {
        color: #22b9ff !important;
    }

    .kt-portlet .kt-portlet__foot {
        padding: 10px 5px 10px 10px !important;
    }

    .k-grid-header .k-filterable, .k-grid-header .k-with-icon {
        padding-right: calc(1px + .5rem + 1.5em + .5rem);
    }
</style>
<div class="content" id="dv_Manage_Lead">
    <div class="kt-portlet">
        <div class="kt-portlet__head">
            <label id="lblUserHeader" style="font-size: large;font-weight:500;margin-left:-10px;margin-top:20px;">Leads</label>
            <div class="kt-portlet__head-toolbar">
                <div class="form__actions kt-portlet__foot">
                    <a href="~/Lead/Create" class="btn btn-sm btn-bold btn-label-brand">
                        <i class="fa fa-plus"></i> Create Lead
                    </a>
                </div>

                <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-brand">
                        <i class="la la-check"></i>
                        <span class="kt-hidden-mobile">Export Options</span>
                    </button>
                    <button type="button" class="btn btn-sm btn-brand dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                    <div class="dropdown-menu dropdown-menu-right" style="">
                        <ul class="kt-nav">
                            <li class="kt-nav__item">
                                <a onclick="return exportPDF()" class="kt-nav__link">
                                    <i class="kt-nav__link-icon"></i>
                                    <span class="kt-nav__link-text">PDF</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a onclick="return exportExcel()" class="kt-nav__link">
                                    <i class="kt-nav__link-icon"></i>
                                    <span class="kt-nav__link-text">Excel</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <section class="content">
            <div class="kt-portlet__body">

                <div class="box-header with-border">
                    @(Html.Kendo().Grid<ds.portal.leads.Models.LeadViewModel>()
                        .Name("leadsGrid")
                        .Columns(columns =>
                        {
                            columns.Template("<div class='gridactionbuttonscontainer'><a class='kt-font-danger' style='cursor:pointer;'onclick=PerformLeadDelete('#:Lead_Id#') title='Delete'> <span style='text-align:center;' class='fa fa-trash-alt'></span></a></div>").Width(30).ClientHeaderTemplate(" ");
                            columns.Bound(p => p.Lead_Id).Title("Id").ClientTemplate("<a style='cursor:pointer;' class='link-text' onclick=PerformLeadEdit('#:encodeLeadId#') title='#:Lead_Id#'>#:Lead_Id#</a>").Width(70);
                            columns.Bound(p => p.Lead_DateOfEnquiry_D).Format("{0:dd/MM/yyyy}").Title("Enquiry").Width(120);
                            columns.Bound(p => p.Lead_ContactName).ClientTemplate("<a style='cursor:pointer;' class='link-text' onclick=PerformLeadEdit('#:encodeLeadId#') title='#:Lead_ContactName#'>#:Lead_ContactName#</a>").Title("Contact Name").Width(180);
                            columns.Bound(p => p.Lead_Contact_Mobile).ClientTemplate("<a style='cursor:pointer;' class='link-text' onclick=PerformLeadEdit('#:encodeLeadId#','true') title='#:Lead_Contact_Mobile#'>#:Lead_Contact_Mobile#</a>").Title("Mobile").Width(120);
                            columns.Bound(p => p.Lead_CourseTitle).Title("Course Level").Width(160);
                            columns.Bound(p => p.Lead_LastResult).Title("Last Result").Width(160);
                            columns.Bound(p => p.Lead_Status).ClientTemplate("<span class='kt-badge kt-badge--inline kt-badge--pill #= Lead_Status_Class #'>#= Lead_Status #</span>").HtmlAttributes(new { style = "text-align:center" }).Title("Status").Width(100);
                            columns.Bound(p => p.Lead_Last_Action).HtmlAttributes(new { style = "text-align:center" }).Title("Last Action").Width(150);
                            if (hasAdminRole)
                            {
                                columns.Bound(p => p.Users_Username).ClientTemplate("<a style='cursor:pointer' onclick='return openSalesAdvisor(#= Lead_Id_SalesAdvisor#,#=Lead_Id#)'> #= Users_Username # <a/>").Title("Assigned to").HtmlAttributes(new { style = "text-align:center" }).Width(180);
                                columns.Bound(p => p.Lead_IsDuplicate).ClientTemplate("<a style='cursor:pointer' onclick='return duplicateOnclick(#= Lead_IsDuplicate#,#=Lead_Id#)'> #= Lead_IsDuplicate == 1 ? 'Yes' :'No' # <a/>").Title("Duplicated").HtmlAttributes(new { style = "text-align:center" }).Width(120);
                            }
                           // columns.Bound(p => p.CourseLevelsEnquiry).Title("Course Level Enquiry").Width(150);
                        })
                        .Resizable(resize => resize.Columns(true))
                        .Reorderable(x => x.Columns(true))
                        .ColumnMenu(c => c.Columns(true))
                        .Scrollable()
                        .Sortable()
                        .Filterable(f => f.Messages(m => m.IsFalse("No")).Messages(m => m.IsTrue("Yes")))
                        .Sortable(sortable =>
                        {
                            sortable.SortMode(GridSortMode.SingleColumn);
                        })
                        .Pageable()
                        .NoRecords()
                        .Filterable()
                        .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(true)
                        .ButtonCount(5))
                        .DataSource(dataSource =>
                        dataSource
                        .WebApi()
                        .Model(model =>
                        {
                            model.Id(p => p.Lead_Id);
                            model.Field(p => p.Lead_Id_SalesAdvisor).DefaultValue(1);
                        })
                        .Events(events => events.Error("error_handler"))
                        .Read(read => read.Action("GetAllLeads", "LeadApi"))
                        .PageSize(20)
                        )
                    )
                </div>
            </div>
        </section>
    </div>


    <partial name="~/Views/Shared/partials/leadmanage/modals/modal_duplicates.cshtml" />
    <partial name="~/Views/Shared/partials/leadmanage/modals/modal_change_salesadvisor.cshtml" />


</div>
@section Scripts{
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/lib/vue/vuelidate.min.js"></script>
    <script src="~/lib/vue/validators.min.js"></script>
    <script src="~/js/Admin/Leads/Manage.js"></script>

}

<script>
    var _canRoleManagerViewLeads;
    var _canRoleManagerEditLead;
    var _canRoleManagerDeleteLead;

       $(document).ready(function () {
           _canRoleManagerViewLeads = @canRoleManagerViewLeads.ToString().ToLower();
           _canRoleManagerEditLead = @canRoleManagerEditLead.ToString().ToLower();
           _canRoleManagerDeleteLead = @canRoleManagerDeleteLead.ToString().ToLower();

           if (!_canRoleManagerViewLeads) {
               window.location.href = '/Error/PermissionDenied';
           }
           resizeGrid1();
    });

        function resizeGrid1() {
            var contentwrapper = $("#kt_aside").innerHeight();
            var gridElement = $("#leadsGrid"),
                newHeight = gridElement.innerHeight(),
                otherElements = gridElement.children().not(".k-grid-content"),
                otherElementsHeight = 0;

            otherElements.each(function () {
                otherElementsHeight += $(this).outerHeight();
            });
                var newHeight = (contentwrapper - otherElementsHeight) - 330;
                if (newHeight < 325) newHeight = 325;
            gridElement.children(".k-grid-content").height(newHeight);
    }

    function exportPDF() {
        var grid = $("#leadsGrid").data("kendoGrid");
        grid.hideColumn(0);
        $("#leadsGrid").getKendoGrid().saveAsPDF();
        grid.showColumn(0);
    }

    function exportExcel()
    {
        $("#leadsGrid").getKendoGrid().saveAsExcel();
    }

</script>

