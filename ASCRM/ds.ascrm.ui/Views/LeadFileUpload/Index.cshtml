
@{ ViewData["Title"] = "Bulk Import Leads";
                Layout = "~/Views/Shared/_Layout.cshtml";

                var permissions = (portal.models.RoleAdmin.Permissions)ViewBag.Permissions;
    @using Kendo.Mvc.UI }
<style>
    .link-text:hover {
        color: #22b9ff !important;
    }

    .k-grid-header .k-filterable, .k-grid-header .k-with-icon {
        padding-right: calc(1px + .5rem + 1.5em + .5rem);
    }

    h4, .h4 {
        font-size: 1em !important;
    }
</style>
<div class="content" id="dv_FileUpload">
    <div class="kt-portlet">
        <div class="kt-portlet__head">
            <label id="lblUserHeader" style="font-size: large;font-weight:500;margin-left:-10px;margin-top:20px;">Import Leads</label>
            <div class="kt-portlet__head-toolbar">
                <div class="form__actions kt-portlet__foot">
                    @*<a href="~/Lead/Create" class="btn btn-sm btn-bold btn-label-brand">
                            <i class="fa fa-plus"></i> Create Lead
                        </a>*@
                </div>

                <div class="btn-group">

                    @*<button type="button" v-on:click="return uploadLead()" class="btn btn-sm btn-brand">
                            <i class="la la-check"></i>
                            <span class="kt-hidden-mobile">Import Lead</span>
                        </button>

                        &nbsp;*@

                    <button type="button" class="btn btn-sm btn-brand">
                        <i class="la la-file-image-o"></i>
                        <span class="kt-hidden-mobile">Options</span>
                    </button>
                    <button type="button" class="btn btn-sm btn-brand dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                    <div class="dropdown-menu dropdown-menu-right" style="">
                        <ul class="kt-nav">
                            <li class="kt-nav__item">
                                <a onclick="return exportPDF()" class="kt-nav__link">
                                    <i class="kt-nav__link-icon"></i>
                                    <span class="kt-nav__link-text">PDF</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a onclick="return exportExcel()" class="kt-nav__link">
                                    <i class="kt-nav__link-icon"></i>
                                    <span class="kt-nav__link-text">Excel</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="LeadFileUpload/Download" class="kt-nav__link">
                                    <i class="kt-nav__link-icon"></i>
                                    <span class="kt-nav__link-text">Download Template</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a onclick="return uploadLead()" class="kt-nav__link">
                                    <i class="kt-nav__link-icon"></i>
                                    <span class="kt-nav__link-text">Import Now</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <section class="content">
            <div class="kt-portlet__body">

                <div class="box-header with-border">
                    <script id="fileTemplate" type="text/x-kendo-template">
                        <span class='k-progress'></span>
                        <div class='file-wrapper' style="width: 100%;margin-bottom: -40px;">
                            <span class='file-icon #=addExtensionClass(files[0].extension)#'></span>
                            <h4 class='file-heading file-name-heading'>Name: #=name#</h4>
                            <h4 class='file-heading file-size-heading'>Size: #=size# bytes</h4>
                            <strong class="k-upload-status">
                                <button type='button' class='k-upload-action'></button>
                                <button type='button' class='k-upload-action'></button>
                            </strong>
                        </div>
                    </script>

                    <div class="demo-section k-content">
                        @(Html.Kendo().Upload()
                            .Name("files")
                            .TemplateId("fileTemplate")
                            .Async(a => a
                                .Save("Templates_Save", "LeadFileUpload")
                                .Remove("Templates_Remove", "LeadFileUpload")
                                .AutoUpload(true)
                            )
                            .Validation(validation => validation.AllowedExtensions(new string[] { ".xlsx", ".xls" }))
                            .Events(x => x.Complete("onComplete"))
                            .Events(x => x.Complete("onProgress"))
                            .Events(x => x.Remove("onRemove"))
                        )
                    </div>

                    <div class="box-header with-border">
                        @(Html.Kendo().Grid<ds.portal.leads.Models.LeadFileUpload>()
                            .Name("leadsFileUploadGrid")
                            .Columns(columns =>
                            {
                                //columns.Bound(p => p.isDuplicate).Title("Duplicate").Filterable(f => f.Enabled(true)).ClientTemplate("#= isDuplicate ? 'Yes' : 'No' #").Width(120);
                                columns.Bound(p => p.contact_is_error).ClientTemplate("#= contact_is_error == true ? 'Yes' :'' #").Title("Error?").Width(80);
                                columns.Bound(p => p.contact_issues).Title("Message").Width(150);
                                columns.Bound(p => p.Sales_Advisor).Title("Sales Advisor").Width(150);
                                columns.Bound(p => p.Company_Name).Title("Company Name").Width(180);
                                columns.Bound(p => p.Date_of_Enquiry).Title("Date of Enquiry").ClientTemplate("#= kendo.toString(Date_of_Enquiry, 'dd/MM/yyyy') #").Width(150);
                                columns.Bound(p => p.Source_of_Enquiry).Title("Source of Enquiry").Width(170);
                                columns.Bound(p => p.Contact).Title("Contact").Width(150);
                                columns.Bound(p => p.Email).Title("Email").Width(250);
                                columns.Bound(p => p.Job_Title).Title("Job Title").Width(150);
                                columns.Bound(p => p.Pathway).Title("Pathway").Width(150);
                                columns.Bound(p => p.Phone).Title("Phone").Width(150);
                                columns.Bound(p => p.Registration).Title("Registration").Width(150);
                                columns.Bound(p => p.Employer_Postcode).Title("Employer Postcode").Width(200);
                                columns.Bound(p => p.Enrolment_Date).Title("Enrolment Date").Width(150);
                                columns.Bound(p => p.Learner_Enrolled).Title("Learner Enrolled").Width(100);
                                columns.Bound(p => p.Department).Title("Department").Width(150);
                                columns.Bound(p => p.CourseLevel_Enquiry).Title("Course Level").Width(200);
                                columns.Bound(p => p.Last_Results).Title("Last Results").Width(250);
                                columns.Bound(p => p.Agreed_Payment_Scheme).Title("Agreed Payment Scheme").Width(200);
                                columns.Bound(p => p.Lead_Cancellation_Date).Title("Enrolment Cancellation Date").Width(250);
                                columns.Bound(p => p.Address1).Title("Address 1").Width(250);
                                columns.Bound(p => p.CourseLevel_Enquiry).Title("Course Level Enquiry").Width(250);
                                columns.Bound(p => p.Notes).Title("Notes").Width(200);
                             })
                            //.ClientRowTemplate("<tr class='#= contact_is_error == 'true' ? '' :'danger' #'></tr>")
                            .Resizable(resize => resize.Columns(true))
                            .Reorderable(x => x.Columns(true))
                            .Scrollable(x => x.Enabled(true))
                            .ColumnMenu(c => c.Columns(true))
                            .Sortable()
                            .Sortable(sortable =>
                            {
                                sortable.SortMode(GridSortMode.SingleColumn);
                            })
                            .Excel(excel => excel
                                .FileName("ContactImportAnomalies.xlsx")
                                .Filterable(true)
                            )
                            .Pageable()
                            .NoRecords()
                            .Filterable(x => x.Mode(GridFilterMode.Menu))
                            .Pageable(pageable => pageable
                            .Refresh(false)
                            .PageSizes(true)
                            .ButtonCount(5))
                            .AutoBind(false)
                            .DataSource(dataSource =>
                            dataSource
                            .Ajax()
                            .ServerOperation(false)
                            //.Model(model =>
                            //{
                            //    model.Id(p => p.Lead_Id);
                            //})
                            .Read(read => read.Action("GetLeadFileUpload", "LeadFileUpload"))
                            .PageSize(1000)
                            )
                        )
                    </div>

                    <script type="text/javascript">
                        function addExtensionClass(extension) {
                            switch (extension) {
                                //case '.jpg':
                                //case '.img':
                                //case '.png':
                                //case '.gif':
                                //    return "img-file";
                                //case '.doc':
                                //case '.docx':
                                //    return "doc-file";
                                case '.xls':
                                case '.xlsx':
                                    return "xls-file";
                                //case '.pdf':
                                //    return "pdf-file";
                                //case '.zip':
                                //case '.rar':
                                //    return "zip-file";
                                //default:
                                //    return "default-file";
                            }
                        }
                    </script>

                    <style>
                        .file-icon {
                            display: inline-block;
                            float: left;
                            width: 48px;
                            height: 48px;
                            margin-left: 10px;
                            margin-top: 13.5px;
                        }

                        .xls-file {
                            background-image: url(../shared/web/upload/xls.png);
                        }

                        #example .file-heading {
                            font-family: Arial;
                            font-size: 1.1em;
                            display: inline-block;
                            float: left;
                            width: 60%;
                            margin: 0 0 0 20px;
                            height: 25px;
                            -ms-text-overflow: ellipsis;
                            -o-text-overflow: ellipsis;
                            text-overflow: ellipsis;
                            overflow: hidden;
                            white-space: nowrap;
                        }

                        #example .file-name-heading {
                            font-weight: bold;
                            margin-top: 20px;
                        }

                        #example .file-size-heading {
                            font-weight: normal;
                            font-style: italic;
                        }

                        li.k-file div.file-wrapper {
                            position: relative;
                            height: 75px;
                        }
                    </style>
                </div>
            </div>
        </section>
    </div>





</div>
@section Scripts{
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/lib/vue/vuelidate.min.js"></script>
    <script src="~/lib/vue/validators.min.js"></script>
    @*<script src="~/js/Admin/Leads/Manage.js"></script>*@

}

<script>
    //var _canRoleManagerViewLeads;
    //var _canRoleManagerEditLead;
    //var _canRoleManagerDeleteLead;

       $(document).ready(function () {
           @*_canRoleManagerViewLeads = @canRoleManagerViewLeads.ToString().ToLower();
           _canRoleManagerEditLead = @canRoleManagerEditLead.ToString().ToLower();
           _canRoleManagerDeleteLead = @canRoleManagerDeleteLead.ToString().ToLower();*@

           //if (!_canRoleManagerViewLeads) {
           //    window.location.href = '/Error/PermissionDenied';
           //}
           //resizeGrid1();
    });

        function resizeGrid1() {
            var contentwrapper = $("#kt_aside").innerHeight();
            var gridElement = $("#leadsGrid"),
                newHeight = gridElement.innerHeight(),
                otherElements = gridElement.children().not(".k-grid-content"),
                otherElementsHeight = 0;

            otherElements.each(function () {
                otherElementsHeight += $(this).outerHeight();
            });
                var newHeight = (contentwrapper - otherElementsHeight) - 330;
                if (newHeight < 325) newHeight = 325;
            gridElement.children(".k-grid-content").height(newHeight);
    }


    function onComplete(e) {
        console.log("Complete");
    }

    function onProgress(e) {
        $('#leadsFileUploadGrid').data('kendoGrid').dataSource.read();
        console.log("Upload progress :: " + e.percentComplete + "% :: " + getFileInfo(e));
    }

    function getFileInfo(e) {
        return $.map(e.files, function (file) {
            var info = file.name;

            // File size is not available in all browsers
            if (file.size > 0) {
                info += " (" + Math.ceil(file.size / 1024) + " KB)";
            }
            return info;
        }).join(", ");
    }

    function uploadLead()
    {
        leadFileUploads = $("#leadsFileUploadGrid").data("kendoGrid").dataSource._data
        $.ajax({
            url: "/api/LeadApi/UploadLead",
            data: JSON.stringify(leadFileUploads),
            type: "Post",
            contentType: "application/json",
            dataType: "json"
        }).done(function (response) {

            if (response.length > 0) {
                toastr.error('Some leads could not be imported.', 'Import');
                $(".k-upload-files.k-reset").find("li").remove();

                $("#leadsFileUploadGrid").data("kendoGrid").dataSource.data(response);
                $('#leadsFileUploadGrid').getKendoGrid().refresh();

                //let filter = $(e).data("filter");
                //var grid = $('#leadsFileUploadGrid').data('kendoGrid');
                //grid.dataSource.read({  response });
                //grid.refresh();
                // $("#leadsFileUploadGrid").data("kendoGrid").dataSource.data([response]);
                //let dataSource = {
                //    data: response
                //};
                //$("#leadsFileUploadGrid").data("kendoGrid").setDataSource(dataSource);
                //$('#leadsFileUploadGrid').data('kendoGrid').refresh();

            } else {
                toastr.success('Leads uploaded successfully.', 'Imported');
                onRemove();
                $(".k-upload-files.k-reset").find("li").remove();
            }

            });

    }

    function onRemove()
    {
        $("#leadsFileUploadGrid").data("kendoGrid").dataSource.data([]);
    }


    function exportPDF() {
        var grid = $("#leadsFileUploadGrid").data("kendoGrid");
      //  grid.hideColumn(0);
        $("#leadsFileUploadGrid").getKendoGrid().saveAsPDF();
     //   grid.showColumn(0);
    }

    function exportExcel()
    {
        var grid = $("#leadsFileUploadGrid").data("kendoGrid");
        grid.setOptions(x => x.PageSize = 1000);
        $("#leadsFileUploadGrid").getKendoGrid().saveAsExcel();

    }

</script>

